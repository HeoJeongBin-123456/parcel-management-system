const { test, expect } = require('@playwright/test');

test.describe('üéØ Í∞ÑÎã®Ìïú ÌÅ¥Î¶≠ ÌÖåÏä§Ìä∏', () => {
    test('ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Î∞è Ï†ÄÏû• ÌôïÏù∏', async ({ page }) => {
        // ÏΩòÏÜî Î°úÍ∑∏ Ï∫°Ï≤ò
        page.on('console', msg => {
            console.log(`[Î∏åÎùºÏö∞Ï†Ä]: ${msg.text()}`);
        });

        // ÌéòÏù¥ÏßÄ Î°úÎìú
        await page.goto('http://localhost:3000');
        await page.waitForTimeout(3000);

        // 1. ÏÉâÏÉÅ ÏÑ†ÌÉù (Îπ®Í∞ÑÏÉâ)
        await page.evaluate(() => {
            // Îπ®Í∞ÑÏÉâ Î≤ÑÌäº ÏßÅÏ†ë ÌÅ¥Î¶≠
            const redButton = document.querySelector('.color-item');
            if (redButton) {
                redButton.click();
                console.log('‚úÖ Îπ®Í∞ÑÏÉâ ÏÑ†ÌÉùÎê®');
            }

            // ÌòÑÏû¨ ÏÉâÏÉÅ ÌôïÏù∏
            const currentColor = window.currentColor || window.ColorPaletteManager?.getCurrentColor()?.hex;
            console.log('ÌòÑÏû¨ ÏÉâÏÉÅ:', currentColor);
            return currentColor;
        });

        await page.waitForTimeout(500);

        // 2. ÏßÄÎèÑ ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Î∞úÏÉù
        console.log('üñ±Ô∏è ÏßÄÎèÑ ÌÅ¥Î¶≠ ÏãúÎèÑ...');

        // ÏßÅÏ†ë ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨ Ìò∏Ï∂ú
        const result = await page.evaluate(async () => {
            // ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨ ÏßÅÏ†ë Ìò∏Ï∂ú
            if (window.handleClickModeLeftClick) {
                console.log('ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨ ÏßÅÏ†ë Ìò∏Ï∂ú');
                await window.handleClickModeLeftClick(37.5665, 126.9780);

                // Ïû†Ïãú ÎåÄÍ∏∞
                await new Promise(resolve => setTimeout(resolve, 2000));

                // localStorage ÌôïÏù∏
                const savedData = localStorage.getItem('parcelData');
                const savedColors = localStorage.getItem('parcelColors');

                return {
                    savedData: savedData ? JSON.parse(savedData).length : 0,
                    savedColors: savedColors ? Object.keys(JSON.parse(savedColors)).length : 0,
                    clickParcelsSize: window.clickParcels ? window.clickParcels.size : 0
                };
            } else {
                console.log('handleClickModeLeftClick Ìï®ÏàòÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏùå');
                return null;
            }
        });

        console.log('Ï†ÄÏû• Í≤∞Í≥º:', result);

        // 3. ÏÉàÎ°úÍ≥†Ïπ®
        await page.reload();
        await page.waitForTimeout(3000);

        // 4. Î≥µÏõê ÌôïÏù∏
        const restoredData = await page.evaluate(() => {
            return {
                clickParcelsSize: window.clickParcels ? window.clickParcels.size : 0,
                polygonsSize: window.clickModePolygons ? window.clickModePolygons.size : 0,
                localStorage: localStorage.getItem('parcelData')
            };
        });

        console.log('Î≥µÏõê Í≤∞Í≥º:', restoredData);

        // Ïä§ÌÅ¨Î¶∞ÏÉ∑
        await page.screenshot({
            path: 'test-simple-click.png',
            fullPage: true
        });
    });
});